{"kind": "Listing", "data": {"modhash": "6mfl3rqt8vd4cfbb2c66ea71d907c6f5a0e9e6a718e8d58bd7", "dist": 27, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.", "author_fullname": "t2_145f96", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sunday Daily Thread: What's everyone working on this week?", "link_flair_richtext": [{"e": "text", "t": "Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mjkjuw", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.86, "author_flair_background_color": "#7289da", "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": "294da566-de3a-11ea-b735-0e5977e6a00f", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Daily Thread", "can_mod_post": false, "score": 23, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [{"a": ":python_discord:", "e": "emoji", "u": "https://emoji.redditmedia.com/x0lrxnhaazg51_t5_2qh0y/python_discord"}, {"e": "text", "t": " Python Discord Staff"}], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1617523216.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "richtext", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Tell &lt;a href=\"/r/python\"&gt;/r/python&lt;/a&gt; what you&amp;#39;re working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": ":python_discord: Python Discord Staff", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "mjkjuw", "is_robot_indexable": true, "report_reasons": null, "author": "Im__Joseph", "discussion_type": null, "num_comments": 17, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "light", "permalink": "/r/Python/comments/mjkjuw/sunday_daily_thread_whats_everyone_working_on/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/mjkjuw/sunday_daily_thread_whats_everyone_working_on/", "subreddit_subscribers": 783705, "created_utc": 1617494416.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.", "author_fullname": "t2_145f96", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tuesday Daily Thread: Advanced questions", "link_flair_richtext": [{"e": "text", "t": "Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mkyiv1", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.96, "author_flair_background_color": "#7289da", "subreddit_type": "public", "ups": 26, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": "294da566-de3a-11ea-b735-0e5977e6a00f", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Daily Thread", "can_mod_post": false, "score": 26, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [{"a": ":python_discord:", "e": "emoji", "u": "https://emoji.redditmedia.com/x0lrxnhaazg51_t5_2qh0y/python_discord"}, {"e": "text", "t": " Python Discord Staff"}], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617696015.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "richtext", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This thread may be fairly low volume in replies, if you don&amp;#39;t receive a response we recommend looking at &lt;a href=\"/r/LearnPython\"&gt;r/LearnPython&lt;/a&gt; or joining the Python Discord server at &lt;a href=\"https://discord.gg/python\"&gt;https://discord.gg/python&lt;/a&gt; where you stand a better chance of receiving a response.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?auto=webp&amp;s=0c1985f1543fe7a14d14311c2652d980005ef82b", "width": 512, "height": 288}, "resolutions": [{"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5d9915f2e93ddb2e01d7d244b475bd8ba556f75", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a03b56135a67422f61f4411ebaf79abf530f99be", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/8lGJXaQoY6hm0yzDNsG2yzAE7FYF_iP0iW_mCsRiqLk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=308a1d0e6203c761fc5dce0329a967ef5a390785", "width": 320, "height": 180}], "variants": {}, "id": "aNa9dCzuqtUFBkZTt98jjYpcv1i_lqriq_lbtm_LcRo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": ":python_discord: Python Discord Staff", "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "mkyiv1", "is_robot_indexable": true, "report_reasons": null, "author": "Im__Joseph", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "light", "permalink": "/r/Python/comments/mkyiv1/tuesday_daily_thread_advanced_questions/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/mkyiv1/tuesday_daily_thread_advanced_questions/", "subreddit_subscribers": 783705, "created_utc": 1617667215.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I made several of the chapters of the book into articles on my blog so you can get a preview of the content in the book:\n\n* [Drawing Shapes on Images with Python and Pillow](https://www.blog.pythonlibrary.org/2021/02/23/drawing-shapes-on-images-with-python-and-pillow/)\n* [Drawing Text on Images with Pillow and Python](https://www.blog.pythonlibrary.org/2021/02/02/drawing-text-on-images-with-pillow-and-python/)\n* [Getting GPS EXIF Data with Python](https://www.blog.pythonlibrary.org/2021/01/13/getting-gps-exif-data-with-python/)\n\n[Mike Driscoll signing copies of Pillow: Image Processing with Python](https://preview.redd.it/15tt5xx91kr61.jpg?width=3405&amp;format=pjpg&amp;auto=webp&amp;s=c9a32acc24202796b05ff1de2c0eaccf4ec5351c)\n\nIn this book, you will learn about the following:\n\n* Opening and saving images\n* Extracting image metadata\n* Working with colors\n* Applying image filters\n* Cropping, rotating, and resizing\n* Enhancing images\n* Combining images\n* Drawing with Pillow\n* ImageChops\n* Integration with GUI toolkits\n\nYou can order the eBook versions on [Leanpub](https://leanpub.com/pillow/) or [Gumroad](https://gum.co/pypillow). When you purchase through either of these websites, you will receive a PDF, epub and mobi version of the book.\n\nThe paperback and Kindle versions are now available on [Amazon](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B08ZCQM1C1).\n\nThe paperback version of the book is in **full color**. That is why it more expensive than any of my other books to purchase.", "author_fullname": "t2_4j2wg", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I am excited to share my 9th published book, Pillow: Image Processing with Python", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 92, "top_awarded_type": null, "hide_score": false, "media_metadata": {"15tt5xx91kr61": {"status": "valid", "e": "Image", "m": "image/jpg", "p": [{"y": 95, "x": 108, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29d1aa195d3c750e58e8a8234284d61966a0fe8f"}, {"y": 191, "x": 216, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e37ffd5e309fe369979cf8e28d3338ef2da1bbe3"}, {"y": 284, "x": 320, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7002ee2bd661f6d54c8128cf2b37e036378e5277"}, {"y": 568, "x": 640, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fd7e8f0cbb5d260e2cdd91ad400bf33778b65ea7"}, {"y": 852, "x": 960, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c8c24563686502fbf9d0284f23cda91f95682db6"}, {"y": 959, "x": 1080, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ce101dfd999e9530db9e6d36fd5a02708389f339"}], "s": {"y": 3024, "x": 3405, "u": "https://preview.redd.it/15tt5xx91kr61.jpg?width=3405&amp;format=pjpg&amp;auto=webp&amp;s=c9a32acc24202796b05ff1de2c0eaccf4ec5351c"}, "id": "15tt5xx91kr61"}}, "name": "t3_mlbo2m", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.96, "author_flair_background_color": null, "subreddit_type": "public", "ups": 258, "total_awards_received": 3, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 258, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/PBLNisK4xzDAg9ifueHYs80Lv0zcgxF6i913oWPIX-4.jpg", "edited": 1617719073.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 1}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617744529.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I made several of the chapters of the book into articles on my blog so you can get a preview of the content in the book:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://www.blog.pythonlibrary.org/2021/02/23/drawing-shapes-on-images-with-python-and-pillow/\"&gt;Drawing Shapes on Images with Python and Pillow&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.blog.pythonlibrary.org/2021/02/02/drawing-text-on-images-with-pillow-and-python/\"&gt;Drawing Text on Images with Pillow and Python&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.blog.pythonlibrary.org/2021/01/13/getting-gps-exif-data-with-python/\"&gt;Getting GPS EXIF Data with Python&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/15tt5xx91kr61.jpg?width=3405&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=c9a32acc24202796b05ff1de2c0eaccf4ec5351c\"&gt;Mike Driscoll signing copies of Pillow: Image Processing with Python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In this book, you will learn about the following:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Opening and saving images&lt;/li&gt;\n&lt;li&gt;Extracting image metadata&lt;/li&gt;\n&lt;li&gt;Working with colors&lt;/li&gt;\n&lt;li&gt;Applying image filters&lt;/li&gt;\n&lt;li&gt;Cropping, rotating, and resizing&lt;/li&gt;\n&lt;li&gt;Enhancing images&lt;/li&gt;\n&lt;li&gt;Combining images&lt;/li&gt;\n&lt;li&gt;Drawing with Pillow&lt;/li&gt;\n&lt;li&gt;ImageChops&lt;/li&gt;\n&lt;li&gt;Integration with GUI toolkits&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;You can order the eBook versions on &lt;a href=\"https://leanpub.com/pillow/\"&gt;Leanpub&lt;/a&gt; or &lt;a href=\"https://gum.co/pypillow\"&gt;Gumroad&lt;/a&gt;. When you purchase through either of these websites, you will receive a PDF, epub and mobi version of the book.&lt;/p&gt;\n\n&lt;p&gt;The paperback and Kindle versions are now available on &lt;a href=\"https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B08ZCQM1C1\"&gt;Amazon&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The paperback version of the book is in &lt;strong&gt;full color&lt;/strong&gt;. That is why it more expensive than any of my other books to purchase.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/EhU4i-Q3JO7NjKu4pIwgpRt6UpOXAgVDA8xbrdcV66M.jpg?auto=webp&amp;s=dfc7f9021a7aff2f57774275c4f4990df03c75a1", "width": 912, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/EhU4i-Q3JO7NjKu4pIwgpRt6UpOXAgVDA8xbrdcV66M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e47c1a8f490bd70e779fb1f29ff0d40405369848", "width": 108, "height": 71}, {"url": "https://external-preview.redd.it/EhU4i-Q3JO7NjKu4pIwgpRt6UpOXAgVDA8xbrdcV66M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ee0fd091f0fd3ae3744ef7ddb3eaab5665718cea", "width": 216, "height": 142}, {"url": "https://external-preview.redd.it/EhU4i-Q3JO7NjKu4pIwgpRt6UpOXAgVDA8xbrdcV66M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5e2212f5ea70b8b5b2f7d3d910c517f3efe56fbb", "width": 320, "height": 210}, {"url": "https://external-preview.redd.it/EhU4i-Q3JO7NjKu4pIwgpRt6UpOXAgVDA8xbrdcV66M.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=05c870081482450ad31a8076349d02da9f3758fa", "width": 640, "height": 421}], "variants": {}, "id": "so5v-eaAFolqASWlIjJ5wS9f028QefrlsVNrZE8m1d4"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}, {"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=73a23bf7f08b633508dedf457f2704c522b94a04", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=50f2f16e71d2929e3d7275060af3ad6b851dbfb1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ca487311563425e195699a4d7e4c57a98cbfde8b", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=7b4eedcffb1c09a826e7837532c52979760f1d2b", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=e4d5ab237eb71a9f02bb3bf9ad5ee43741918d6c", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 2, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=16&amp;height=16&amp;auto=webp&amp;s=69997ace3ef4ffc099b81d774c2c8f1530602875", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=32&amp;height=32&amp;auto=webp&amp;s=e9519d1999ef9dce5c8a9f59369cb92f52d95319", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=48&amp;height=48&amp;auto=webp&amp;s=f076c6434fb2d2f9075991810fd845c40fa73fc6", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=64&amp;height=64&amp;auto=webp&amp;s=85527145e0c4b754306a30df29e584fd16187636", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=128&amp;height=128&amp;auto=webp&amp;s=b8843cdf82c3b741d7af057c14076dcd2621e811", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlbo2m", "is_robot_indexable": true, "report_reasons": null, "author": "driscollis", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlbo2m/i_am_excited_to_share_my_9th_published_book/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mlbo2m/i_am_excited_to_share_my_9th_published_book/", "subreddit_subscribers": 783705, "created_utc": 1617715729.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_27zm0l8g", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Python Insider: Python 3.10.0a7 is now available for testing", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mlbjds", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 24, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 24, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1617744144.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "blog.python.org", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://blog.python.org/2021/04/python-3100a7-is-now-available-for.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlbjds", "is_robot_indexable": true, "report_reasons": null, "author": "genericlemon24", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlbjds/python_insider_python_3100a7_is_now_available_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.python.org/2021/04/python-3100a7-is-now-available-for.html", "subreddit_subscribers": 783705, "created_utc": 1617715344.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_99nmpkoy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Solving the Double-Springed Pendulum Using Sympy. The background you see in the thumbnail is one of eight coupled differential equations you need to solve. Yes, python helps significantly with symbolic math", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_ml4sgw", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.92, "author_flair_background_color": null, "subreddit_type": "public", "ups": 87, "total_awards_received": 1, "media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/SZdZeT93C1s?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "The Double-SPRINGED Pendulum: Impossible on Paper | Python Metaphysics #7", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/SZdZeT93C1s?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Mr. P Solver", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/SZdZeT93C1s/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCKaYxkHrmsQePZFpzF9b7sQ"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/SZdZeT93C1s?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/ml4sgw", "height": 200}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 87, "approved_by": null, "author_premium": true, "thumbnail": "https://b.thumbs.redditmedia.com/D2gxmDAu2DI157zpSbUjgRBN-Fn3t5mjiwXHu905z-g.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617717104.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtube.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.youtube.com/watch?v=SZdZeT93C1s", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/aqB0qK17zp36quxGnwzkqEz3uWHkfUdpieF5YxK3tmE.jpg?auto=webp&amp;s=25db01b51779b415c08af7e5d2fca84fade5d3f3", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/aqB0qK17zp36quxGnwzkqEz3uWHkfUdpieF5YxK3tmE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6913ac9081097e22f4f16dbab26bc932840ac84d", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/aqB0qK17zp36quxGnwzkqEz3uWHkfUdpieF5YxK3tmE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e52c7574b0c80fc7c0cd96fedae3546ed8763eaa", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/aqB0qK17zp36quxGnwzkqEz3uWHkfUdpieF5YxK3tmE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4eae729c5a5fd496ced7d2519632bd4ede673ef7", "width": 320, "height": 240}], "variants": {}, "id": "yl7Hhlrpxdr_8iPdRrj4-TJVDmBP_czHCi9YX7OPQgg"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": 0, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 80, "id": "award_8352bdff-3e03-4189-8a08-82501dd8f835", "penny_donate": 0, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=16&amp;height=16&amp;auto=webp&amp;s=73a23bf7f08b633508dedf457f2704c522b94a04", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=32&amp;height=32&amp;auto=webp&amp;s=50f2f16e71d2929e3d7275060af3ad6b851dbfb1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=ca487311563425e195699a4d7e4c57a98cbfde8b", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=64&amp;height=64&amp;auto=webp&amp;s=7b4eedcffb1c09a826e7837532c52979760f1d2b", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/ks45ij6w05f61_oldHugz.png?width=128&amp;height=128&amp;auto=webp&amp;s=e4d5ab237eb71a9f02bb3bf9ad5ee43741918d6c", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Everything is better with a good hug", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Hugz", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=16&amp;height=16&amp;auto=webp&amp;s=69997ace3ef4ffc099b81d774c2c8f1530602875", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=32&amp;height=32&amp;auto=webp&amp;s=e9519d1999ef9dce5c8a9f59369cb92f52d95319", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=48&amp;height=48&amp;auto=webp&amp;s=f076c6434fb2d2f9075991810fd845c40fa73fc6", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=64&amp;height=64&amp;auto=webp&amp;s=85527145e0c4b754306a30df29e584fd16187636", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png?width=128&amp;height=128&amp;auto=webp&amp;s=b8843cdf82c3b741d7af057c14076dcd2621e811", "width": 128, "height": 128}], "icon_format": "PNG", "icon_height": 2048, "penny_price": 0, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_q0gj4/fpm0r5ryq1361_PolarHugs.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "ml4sgw", "is_robot_indexable": true, "report_reasons": null, "author": "JackStrawng", "discussion_type": null, "num_comments": 9, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/ml4sgw/solving_the_doublespringed_pendulum_using_sympy/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.youtube.com/watch?v=SZdZeT93C1s", "subreddit_subscribers": 783705, "created_utc": 1617688304.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "The Double-SPRINGED Pendulum: Impossible on Paper | Python Metaphysics #7", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/SZdZeT93C1s?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Mr. P Solver", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/SZdZeT93C1s/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/channel/UCKaYxkHrmsQePZFpzF9b7sQ"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_x67s8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How I Calculated the 1,000,000th Fibonacci Number with Python", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 81, "top_awarded_type": null, "hide_score": false, "name": "t3_mkpifc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 807, "total_awards_received": 4, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 807, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/YfvciofkdKQfqAY6IxnhhgSZS2mniwKk29zmp1Lnvug.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 3}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617671143.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "kushm.medium.com", "allow_live_comments": true, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://kushm.medium.com/how-i-calculated-the-1-000-000th-fibonacci-number-with-python-e921d3642dbf", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?auto=webp&amp;s=cdb9c61013aeb08fa38329484ae3680bb0d05d10", "width": 1200, "height": 702}, "resolutions": [{"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fd4591854eb327673b9a712e9d3aff98756f42f4", "width": 108, "height": 63}, {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b9b6a738ac982d2392e07493ffea026e680a9af3", "width": 216, "height": 126}, {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a0a75e688668acf57eec3c2bcec453588227d515", "width": 320, "height": 187}, {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fdda471c4b585fb52aafebca153600961754415d", "width": 640, "height": 374}, {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2fd176332592bd8633da5ec9558f95c79e25dcae", "width": 960, "height": 561}, {"url": "https://external-preview.redd.it/CcComFjt65TGotAkeSnq7u2XEwz911iiMq3nekDpTwo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=471e5eaea209f7b934b59179e592c3daf65d72ee", "width": 1080, "height": 631}], "variants": {}, "id": "m2EtVj5ey2V1hhL9wu2X6EYTKg5-xy0qkGaazulA8yc"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Helpful", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png"}, {"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 100, "id": "gid_1", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_width": 512, "static_icon_width": 512, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Shows the Silver Award... and that's it.", "end_date": null, "subreddit_coin_reward": 0, "count": 3, "static_icon_height": 512, "name": "Silver", "resized_static_icons": [{"url": "https://www.redditstatic.com/gold/awards/icon/silver_16.png", "width": 16, "height": 16}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_32.png", "width": 32, "height": 32}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_48.png", "width": 48, "height": 48}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_64.png", "width": 64, "height": 64}, {"url": "https://www.redditstatic.com/gold/awards/icon/silver_128.png", "width": 128, "height": 128}], "icon_format": null, "icon_height": 512, "penny_price": null, "award_type": "global", "static_icon_url": "https://www.redditstatic.com/gold/awards/icon/silver_512.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mkpifc", "is_robot_indexable": true, "report_reasons": null, "author": "1Blademaster", "discussion_type": null, "num_comments": 96, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mkpifc/how_i_calculated_the_1000000th_fibonacci_number/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kushm.medium.com/how-i-calculated-the-1-000-000th-fibonacci-number-with-python-e921d3642dbf", "subreddit_subscribers": 783705, "created_utc": 1617642343.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_ccq5p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Python Luminary Pablo Galindo Talks Programming Language's Future", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": 89, "top_awarded_type": null, "hide_score": false, "name": "t3_mlaefj", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 22, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/c5Va-GSNms2hdeM9ti9Diy0ftYIKGtWIVwAdgGbDSUw.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617740588.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "insights.dice.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://insights.dice.com/2021/04/06/python-luminary-pablo-galindo-talks-programming-languages-future/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?auto=webp&amp;s=e2807bc86bf0b3ab9f683880a46aa2513feddffa", "width": 1000, "height": 642}, "resolutions": [{"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=adfa6f7033037d1fc1bd66f566b505846ce90cae", "width": 108, "height": 69}, {"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=987dad9d9b8e100694d1defebaebb8e5031e5b92", "width": 216, "height": 138}, {"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bb46419b7a9a24e176704ba9e8ee538ed8551128", "width": 320, "height": 205}, {"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=15e135d04d4174c75759a8efdce72686dac95e1f", "width": 640, "height": 410}, {"url": "https://external-preview.redd.it/izA1Fnp0907abbhGl8MCDqJUnW8TsWH86rV6CiP9McA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=cd2d111ddd4cb26adb45bc98ee48265af3509b7b", "width": 960, "height": 616}], "variants": {}, "id": "3aiopfaU3YEolK61bYdF42vfBRrXeZdEPQIp0AaShE0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlaefj", "is_robot_indexable": true, "report_reasons": null, "author": "BrooklynShatterDome", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlaefj/python_luminary_pablo_galindo_talks_programming/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://insights.dice.com/2021/04/06/python-luminary-pablo-galindo-talks-programming-languages-future/", "subreddit_subscribers": 783705, "created_utc": 1617711788.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Understanding long sources is best done at a high level. However, when simply reading source code it can be hard to see the forest from the trees, which is why I've created a small library for visualising source code as a graph of dependencies between variables, functions, classes  and such. Best to show some output right away:\n\n[sphinx-autodoc-typehints](https://preview.redd.it/tvjmmlxfhjr61.png?width=1229&amp;format=png&amp;auto=webp&amp;s=12fb3708a38c57afb8f2d515172f6ef0720ced70)\n\nThe example was generated from a single-file 3rd-party Sphinx extension \"sphinx-autodoc-typehints\". It shows clear structure: a single top level function with a clean processing hierarchy and a common logger instance. A substantial, completely separate section on the left under \"format\\_annotation\" could for example be an ideal candidate for a sub-module, should the need to refactor arise. For a first-time reader, this is very insightful and intuitive when compared to reading 400+ loc thouroughly.\n\nThe graphs are analysed for number of connections and other special properties (see [legend](https://pyfactor.readthedocs.io/en/latest/gallery.html#legend)), and docstrings are available as hover tooltips. Multi-file analysis of local or importable packages produces a hierarchical graph where imports connect modules or files together. For example see the builtin [json](https://pyfactor.readthedocs.io/en/latest/gallery/json.html) and [concurrent](https://pyfactor.readthedocs.io/en/latest/gallery/concurrent.html) modules.\n\n[collapsed Black source with docstring tooltip](https://preview.redd.it/mvl64b5dkjr61.png?width=300&amp;format=png&amp;auto=webp&amp;s=da71413bfd3efd4ae426d82e5c254b0ba2d1036f)\n\nMore examples of popular libraries are available on our [RTD gallery](https://pyfactor.readthedocs.io/en/latest/gallery.html). You can also try it out on your own sources by installing on [PyPI](https://pypi.org/project/pyfactor/). In the [latest release](https://pyfactor.readthedocs.io/en/latest/release-notes.html#) we added multi-file analysis, improved on the CLI and fixed a bunch of issues.\n\nThis library came about when I tried to introduced myself to Black's single-file code base - [7000 lines of horror](https://pyfactor.readthedocs.io/en/latest/gallery/black.html). I'm not here to diss Black or its contributors, 7k loc is more than enough to be complex anyway, but the graph reveals that complexity at a glance. My hope is that it will be particularly useful for those that need to get an understanding of a code base fast, newer programmers that want to understand their own code and how to make it better, and as a tool for refactoring in general. It's no miracle worker, but I think it could have potential as a tool for making the right decisions. What do you think?", "author_fullname": "t2_5lymqxik", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Pyfactor update 0.4: visualise source code structure as a graph - a command line refactoring tool", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": 87, "top_awarded_type": null, "hide_score": false, "media_metadata": {"tvjmmlxfhjr61": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 67, "x": 108, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=747b1dac04c2742a107530d275957e0d2c25dd54"}, {"y": 134, "x": 216, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=ef99d7763b5cdc361d2775d1241e45989f32bf2b"}, {"y": 199, "x": 320, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=42c85f8cdb9fb2f8de03fd784e33b6cf909867f8"}, {"y": 398, "x": 640, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=fcaf23938e42da4dcc70fc4e9dba4d737efb2925"}, {"y": 598, "x": 960, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=b09ae948cbfe72e52e5118994445a9ddb3d0e0b6"}, {"y": 673, "x": 1080, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5ce6b80e2e92562421a8cabb29665db363743f30"}], "s": {"y": 766, "x": 1229, "u": "https://preview.redd.it/tvjmmlxfhjr61.png?width=1229&amp;format=png&amp;auto=webp&amp;s=12fb3708a38c57afb8f2d515172f6ef0720ced70"}, "id": "tvjmmlxfhjr61"}, "mvl64b5dkjr61": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 99, "x": 108, "u": "https://preview.redd.it/mvl64b5dkjr61.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=cb7dbbce253c2a6fb5af36fbbe5822ee0c48a1cb"}, {"y": 198, "x": 216, "u": "https://preview.redd.it/mvl64b5dkjr61.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=af9a4bd68080710243f9da66724fc25d9724a2d3"}], "s": {"y": 275, "x": 300, "u": "https://preview.redd.it/mvl64b5dkjr61.png?width=300&amp;format=png&amp;auto=webp&amp;s=da71413bfd3efd4ae426d82e5c254b0ba2d1036f"}, "id": "mvl64b5dkjr61"}}, "name": "t3_mla0l3", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.85, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/ek7S4o2WGc1ttAsOI_cYi84alzBce5jCHAtyMycJinQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1617739304.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Understanding long sources is best done at a high level. However, when simply reading source code it can be hard to see the forest from the trees, which is why I&amp;#39;ve created a small library for visualising source code as a graph of dependencies between variables, functions, classes  and such. Best to show some output right away:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/tvjmmlxfhjr61.png?width=1229&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=12fb3708a38c57afb8f2d515172f6ef0720ced70\"&gt;sphinx-autodoc-typehints&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The example was generated from a single-file 3rd-party Sphinx extension &amp;quot;sphinx-autodoc-typehints&amp;quot;. It shows clear structure: a single top level function with a clean processing hierarchy and a common logger instance. A substantial, completely separate section on the left under &amp;quot;format_annotation&amp;quot; could for example be an ideal candidate for a sub-module, should the need to refactor arise. For a first-time reader, this is very insightful and intuitive when compared to reading 400+ loc thouroughly.&lt;/p&gt;\n\n&lt;p&gt;The graphs are analysed for number of connections and other special properties (see &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/gallery.html#legend\"&gt;legend&lt;/a&gt;), and docstrings are available as hover tooltips. Multi-file analysis of local or importable packages produces a hierarchical graph where imports connect modules or files together. For example see the builtin &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/gallery/json.html\"&gt;json&lt;/a&gt; and &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/gallery/concurrent.html\"&gt;concurrent&lt;/a&gt; modules.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/mvl64b5dkjr61.png?width=300&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=da71413bfd3efd4ae426d82e5c254b0ba2d1036f\"&gt;collapsed Black source with docstring tooltip&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;More examples of popular libraries are available on our &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/gallery.html\"&gt;RTD gallery&lt;/a&gt;. You can also try it out on your own sources by installing on &lt;a href=\"https://pypi.org/project/pyfactor/\"&gt;PyPI&lt;/a&gt;. In the &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/release-notes.html#\"&gt;latest release&lt;/a&gt; we added multi-file analysis, improved on the CLI and fixed a bunch of issues.&lt;/p&gt;\n\n&lt;p&gt;This library came about when I tried to introduced myself to Black&amp;#39;s single-file code base - &lt;a href=\"https://pyfactor.readthedocs.io/en/latest/gallery/black.html\"&gt;7000 lines of horror&lt;/a&gt;. I&amp;#39;m not here to diss Black or its contributors, 7k loc is more than enough to be complex anyway, but the graph reveals that complexity at a glance. My hope is that it will be particularly useful for those that need to get an understanding of a code base fast, newer programmers that want to understand their own code and how to make it better, and as a tool for refactoring in general. It&amp;#39;s no miracle worker, but I think it could have potential as a tool for making the right decisions. What do you think?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "mla0l3", "is_robot_indexable": true, "report_reasons": null, "author": "felix-hilden", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mla0l3/pyfactor_update_04_visualise_source_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mla0l3/pyfactor_update_04_visualise_source_code/", "subreddit_subscribers": 783705, "created_utc": 1617710504.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hello, \n\n I recently needed to scrape Reddit for a project. \n\nSo I developed `saveddit`.\n\n**GitHub**: https://github.com/p-ranav/saveddit\n\n* downloads submissions from one or more subreddits. \n* handles categories to download from, e.g., `hot`, `rising` etc.\n* downloads comments and submission meta information\n* supports the most commonly used sites: imgur, youtube, reddit galleries, reddit videos, gifv, redgifs, etc.", "author_fullname": "t2_4enklo9p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "saveddit: Bulk downloader for subreddits", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mlb091", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 12, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 12, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617742560.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, &lt;/p&gt;\n\n&lt;p&gt;I recently needed to scrape Reddit for a project. &lt;/p&gt;\n\n&lt;p&gt;So I developed &lt;code&gt;saveddit&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href=\"https://github.com/p-ranav/saveddit\"&gt;https://github.com/p-ranav/saveddit&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;downloads submissions from one or more subreddits. &lt;/li&gt;\n&lt;li&gt;handles categories to download from, e.g., &lt;code&gt;hot&lt;/code&gt;, &lt;code&gt;rising&lt;/code&gt; etc.&lt;/li&gt;\n&lt;li&gt;downloads comments and submission meta information&lt;/li&gt;\n&lt;li&gt;supports the most commonly used sites: imgur, youtube, reddit galleries, reddit videos, gifv, redgifs, etc.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/JchMqCyla3hnIYm1FFmeAUtehw70gCO4mRhIOGLxEbk.jpg?auto=webp&amp;s=e67e9cb10b9c1a1c78f9e929067d8e8c9665b6e6", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/JchMqCyla3hnIYm1FFmeAUtehw70gCO4mRhIOGLxEbk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3b28cd4c8f4b158cf9e9844e91a7df06abb4ee2d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/JchMqCyla3hnIYm1FFmeAUtehw70gCO4mRhIOGLxEbk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e884abc97cf2946ab13e7db5037516257bd68d3e", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/JchMqCyla3hnIYm1FFmeAUtehw70gCO4mRhIOGLxEbk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=577642a0d780a8b7e36342c1a02a64d3433a1c4a", "width": 320, "height": 320}], "variants": {}, "id": "F3Ld1Otz85Bua856nJBTZxTbusQ1JqeS9SBEHs2UsBo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "mlb091", "is_robot_indexable": true, "report_reasons": null, "author": "p_ranav", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlb091/saveddit_bulk_downloader_for_subreddits/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mlb091/saveddit_bulk_downloader_for_subreddits/", "subreddit_subscribers": 783705, "created_utc": 1617713760.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hey everyone, I often see questions on reddit about how to solve one error - but debugging goes a lot deeper than a single error or fix. I made a video that covers off on the full process and mindset of debugging, from good bug management to specific tools - I'm hoping this helps people focus more on building instead of debugging!\n\nVideo: [https://youtu.be/VLlXZGVeqJg](https://youtu.be/VLlXZGVeqJg)", "author_fullname": "t2_k84gn", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to Debug your code - mindset, process and tools", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mlakqe", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.81, "author_flair_background_color": null, "subreddit_type": "public", "ups": 6, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 6, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617741160.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone, I often see questions on reddit about how to solve one error - but debugging goes a lot deeper than a single error or fix. I made a video that covers off on the full process and mindset of debugging, from good bug management to specific tools - I&amp;#39;m hoping this helps people focus more on building instead of debugging!&lt;/p&gt;\n\n&lt;p&gt;Video: &lt;a href=\"https://youtu.be/VLlXZGVeqJg\"&gt;https://youtu.be/VLlXZGVeqJg&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/7rZLueJsNLsAFNCY6DSKesvBkMPEaHBrKOBng9vkSFI.jpg?auto=webp&amp;s=173bd7a1ba82d2cbc9a3d0fa1daa02edc96fa8a2", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/7rZLueJsNLsAFNCY6DSKesvBkMPEaHBrKOBng9vkSFI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f79c109aee0fb34ad577818679f5f8eef1830c83", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/7rZLueJsNLsAFNCY6DSKesvBkMPEaHBrKOBng9vkSFI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=23963bb1aa20e75bbbc62d4df4b15d437f224d1b", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/7rZLueJsNLsAFNCY6DSKesvBkMPEaHBrKOBng9vkSFI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9e30fb9be4b0d236f49f781e0cc69bebc012ccf1", "width": 320, "height": 240}], "variants": {}, "id": "6hqTjSJ9-4_X3Ll0AQfqvoNZLR0mrlr-x_vo5QhQYr4"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "mlakqe", "is_robot_indexable": true, "report_reasons": null, "author": "MJMarto", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlakqe/how_to_debug_your_code_mindset_process_and_tools/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mlakqe/how_to_debug_your_code_mindset_process_and_tools/", "subreddit_subscribers": 783705, "created_utc": 1617712360.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_rcces", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Your Brains on Python Part 3: Analyzing brainwave data with Jupyter Notebook", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_mlbjj3", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/rPBs15pfJlc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Your Brains on Python Part 3: Analyzing brainwave data with Jupyter Notebook", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/rPBs15pfJlc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "DevXplaining", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/rPBs15pfJlc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/DevXplaining"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/rPBs15pfJlc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/mlbjj3", "height": 200}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 5, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/H8DUykUZNwWbjTUm2gWVd-yQTpM1R59XnuW43t14yck.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617744157.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/rPBs15pfJlc", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Rss4OPSZb581r5vVv9qtbvTGN_d8SePZMGJ4HO-DM70.jpg?auto=webp&amp;s=f7b94e2e963e8d42473e3b3b3e8282f124a93433", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/Rss4OPSZb581r5vVv9qtbvTGN_d8SePZMGJ4HO-DM70.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4a48ff266c8d92ce4cca12d96d2481bf63673693", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/Rss4OPSZb581r5vVv9qtbvTGN_d8SePZMGJ4HO-DM70.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=34e286dac1c4eefb39ca02c27f610d6754e32ac2", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/Rss4OPSZb581r5vVv9qtbvTGN_d8SePZMGJ4HO-DM70.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c15d83599adeb809610c2516e3c10c830b5da77f", "width": 320, "height": 240}], "variants": {}, "id": "3E5BWYXLGDYWsnPPZUCI5me21fP40AIwIWRND4gme18"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "mlbjj3", "is_robot_indexable": true, "report_reasons": null, "author": "crystoll", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlbjj3/your_brains_on_python_part_3_analyzing_brainwave/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/rPBs15pfJlc", "subreddit_subscribers": 783705, "created_utc": 1617715357.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Your Brains on Python Part 3: Analyzing brainwave data with Jupyter Notebook", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/rPBs15pfJlc?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "DevXplaining", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/rPBs15pfJlc/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/DevXplaining"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "So I've made my own basic [Translator](https://github.com/Sherlemious/IGCSE-CS-PC-Transpiler) that \"interprets\" the \"Pseudocode\" syntax used by one of the school Syllabi. Feedback would be very appreciated.\n\n[Link](https://github.com/Sherlemious/IGCSE-CS-PC-Transpiler)", "author_fullname": "t2_1qko8nc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "IGCSE CS PseudoCode Transpiler", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mla0yf", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.68, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 4, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617739335.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;ve made my own basic &lt;a href=\"https://github.com/Sherlemious/IGCSE-CS-PC-Transpiler\"&gt;Translator&lt;/a&gt; that &amp;quot;interprets&amp;quot; the &amp;quot;Pseudocode&amp;quot; syntax used by one of the school Syllabi. Feedback would be very appreciated.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Sherlemious/IGCSE-CS-PC-Transpiler\"&gt;Link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/RVmoLBWQBjp2EtWNuRj8uTP4pqM5AXUu3keZ5aPgjaY.jpg?auto=webp&amp;s=675a7b3b5b689daac1a2f36a8715c92098cab373", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/RVmoLBWQBjp2EtWNuRj8uTP4pqM5AXUu3keZ5aPgjaY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c5dbe7b0a0a94258051831ea2975339e4500860d", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/RVmoLBWQBjp2EtWNuRj8uTP4pqM5AXUu3keZ5aPgjaY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d07dba2b0c46ce62ca224486545ae9f6c6bdc38d", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/RVmoLBWQBjp2EtWNuRj8uTP4pqM5AXUu3keZ5aPgjaY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4b1bd262bbcec5b2b53fff5c7bc5a77d8fff894f", "width": 320, "height": 320}], "variants": {}, "id": "ogPDloqH3eD4ukqxd_pk2Z9qxO6Di59nYQZulMhwYDo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "mla0yf", "is_robot_indexable": true, "report_reasons": null, "author": "Sherlemious", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mla0yf/igcse_cs_pseudocode_transpiler/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mla0yf/igcse_cs_pseudocode_transpiler/", "subreddit_subscribers": 783705, "created_utc": 1617710535.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_atnwc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Falcon 3.0 released!", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_mkxi1t", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 32, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 32, "approved_by": null, "author_premium": false, "thumbnail": "https://a.thumbs.redditmedia.com/VFr3jXzvMDfDcjK8XH-sG2lqsZ6cr0-1GoXSs1kjSH0.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617692912.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/falconry/falcon/releases/tag/3.0.0", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/kh3jp6aPlChGBL5nEp1M5hyL-AAuQfiIZU8MU-6vKLo.jpg?auto=webp&amp;s=becf2ba5674436c6a8f4290bd2d51ffcf9cd29c4", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/kh3jp6aPlChGBL5nEp1M5hyL-AAuQfiIZU8MU-6vKLo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bb46a475c6770f4500c19ee714b46bb00201935b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/kh3jp6aPlChGBL5nEp1M5hyL-AAuQfiIZU8MU-6vKLo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=582e97c22c7b1fbe22ecca444481a94ec648f07c", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/kh3jp6aPlChGBL5nEp1M5hyL-AAuQfiIZU8MU-6vKLo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c9fda7140285c6daeafbdf4e2c25c95d68dee85a", "width": 320, "height": 320}], "variants": {}, "id": "jxlHePBqfiFoEYimffGduk7ln0ChfyaBLHWXY_dqh3s"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mkxi1t", "is_robot_indexable": true, "report_reasons": null, "author": "t3g", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mkxi1t/falcon_30_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/falconry/falcon/releases/tag/3.0.0", "subreddit_subscribers": 783705, "created_utc": 1617664112.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_1p0s", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Is Transcrypt dead? It looks like it from the lack of bug fixes.", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_mlbttt", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/TSX5lHK84VDB27TuAJBhtNaYWmoW-vcpXggf-cDKSpU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617745016.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/QQuick/Transcrypt/issues/650", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/UNZCbJ30ePxqIdFuLRF83gZYf8R9TIbPoU1XVsT40cE.jpg?auto=webp&amp;s=a2d3c78ca168021a87a1d1f9e0298ddd6a19fa6b", "width": 205, "height": 205}, "resolutions": [{"url": "https://external-preview.redd.it/UNZCbJ30ePxqIdFuLRF83gZYf8R9TIbPoU1XVsT40cE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e7f605d02011010c074f88676edf4b621a5b5c26", "width": 108, "height": 108}], "variants": {}, "id": "FZ3fDoTRtt-wl3eL7Te2Q38qSZPU_nz_EWRDiGCgEQ0"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlbttt", "is_robot_indexable": true, "report_reasons": null, "author": "metaperl", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlbttt/is_transcrypt_dead_it_looks_like_it_from_the_lack/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/QQuick/Transcrypt/issues/650", "subreddit_subscribers": 783705, "created_utc": 1617716216.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Just as a precursor, I am not a professional by any means.  Python allows me to destress and I do this as a hobby and nothing more.\n\nThis is my very first flask python project.  I am completely nervous about submitting.  It is about 2 months worth of on and off work and I\u2019m hoping that you enjoy it.\n\nSongPool was a creation of sillyness among friends.  You submit songs, searching and confirming songs through the Spotify API.  You rate other songs, and others rate your songs, and can get recommendations of music based on what you\u2019re liking.\n\nYou have to rate songs to post songs.  All songs are anonymous until you\u2019ve rated them, and users only get one comment per song.\n\nRatings are final, comments are final.\n\nSongPool is invitational only so I have placed a link below that allows 5 people to be invited.\n\nLet me know if anything goes awry! Any feedback would be greatly appreciated!\n\nEdit: I should also mention that this project does not rely on any JavaScript and this project will stay that way.\n\nSource: https://github.com/Ullarah/SongPool\n\nhttps://songpool.xyz/invite/LKGzp2nrbYDVyi8Y\n\nEdit: Okay that went quick haha, I have put 10 more invites in for the above link.  Thanks everybody for your support in this project, I appreciate it!", "author_fullname": "t2_3rb96dot", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "SongPool - A place to rate how good, and bad, others music taste is.", "link_flair_richtext": [{"e": "text", "t": "Beginner Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "beginner-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mkhpu1", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 278, "total_awards_received": 1, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Beginner Showcase", "can_mod_post": false, "score": 278, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": 1617625996.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617648165.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just as a precursor, I am not a professional by any means.  Python allows me to destress and I do this as a hobby and nothing more.&lt;/p&gt;\n\n&lt;p&gt;This is my very first flask python project.  I am completely nervous about submitting.  It is about 2 months worth of on and off work and I\u2019m hoping that you enjoy it.&lt;/p&gt;\n\n&lt;p&gt;SongPool was a creation of sillyness among friends.  You submit songs, searching and confirming songs through the Spotify API.  You rate other songs, and others rate your songs, and can get recommendations of music based on what you\u2019re liking.&lt;/p&gt;\n\n&lt;p&gt;You have to rate songs to post songs.  All songs are anonymous until you\u2019ve rated them, and users only get one comment per song.&lt;/p&gt;\n\n&lt;p&gt;Ratings are final, comments are final.&lt;/p&gt;\n\n&lt;p&gt;SongPool is invitational only so I have placed a link below that allows 5 people to be invited.&lt;/p&gt;\n\n&lt;p&gt;Let me know if anything goes awry! Any feedback would be greatly appreciated!&lt;/p&gt;\n\n&lt;p&gt;Edit: I should also mention that this project does not rely on any JavaScript and this project will stay that way.&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=\"https://github.com/Ullarah/SongPool\"&gt;https://github.com/Ullarah/SongPool&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://songpool.xyz/invite/LKGzp2nrbYDVyi8Y\"&gt;https://songpool.xyz/invite/LKGzp2nrbYDVyi8Y&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: Okay that went quick haha, I have put 10 more invites in for the above link.  Thanks everybody for your support in this project, I appreciate it!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/bFOsy92T4YShmJRpp300Hh9w1zs6VchczmpOdbXHFk4.jpg?auto=webp&amp;s=594240a191c51a23b803565752c5ebfaf586f358", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/bFOsy92T4YShmJRpp300Hh9w1zs6VchczmpOdbXHFk4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c8bdd2370cbedd63f42bca70c90f611013fa3fa7", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/bFOsy92T4YShmJRpp300Hh9w1zs6VchczmpOdbXHFk4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0b0b69029b672f796db52a893d3a9af0c09f941b", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/bFOsy92T4YShmJRpp300Hh9w1zs6VchczmpOdbXHFk4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cc80a2e8276e8431683cad8de86afe47315806fe", "width": 320, "height": 320}], "variants": {}, "id": "HcI1D9zEFdmF_9mnxvCQwiTc2dZfKMjLYhoAO6jTYP8"}], "enabled": false}, "all_awardings": [{"giver_coin_reward": null, "subreddit_id": null, "is_new": false, "days_of_drip_extension": 0, "coin_price": 150, "id": "award_f44611f1-b89e-46dc-97fe-892280b13b82", "penny_donate": null, "award_sub_type": "GLOBAL", "coin_reward": 0, "icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png", "days_of_premium": 0, "tiers_by_required_awardings": null, "resized_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_width": 2048, "static_icon_width": 2048, "start_date": null, "is_enabled": true, "awardings_required_to_grant_benefits": null, "description": "Thank you stranger. Shows the award.", "end_date": null, "subreddit_coin_reward": 0, "count": 1, "static_icon_height": 2048, "name": "Helpful", "resized_static_icons": [{"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=16&amp;height=16&amp;auto=webp&amp;s=a5662dfbdb402bf67866c050aa76c31c147c2f45", "width": 16, "height": 16}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=32&amp;height=32&amp;auto=webp&amp;s=a6882eb3f380e8e88009789f4d0072e17b8c59f1", "width": 32, "height": 32}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=48&amp;height=48&amp;auto=webp&amp;s=e50064b090879e8a0b55e433f6ee61d5cb5fbe1d", "width": 48, "height": 48}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=64&amp;height=64&amp;auto=webp&amp;s=8e5bb2e76683cb6b161830bcdd9642049d6adc11", "width": 64, "height": 64}, {"url": "https://preview.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png?width=128&amp;height=128&amp;auto=webp&amp;s=eda4a9246f95f42ee6940cc0ec65306fd20de878", "width": 128, "height": 128}], "icon_format": null, "icon_height": 2048, "penny_price": null, "award_type": "global", "static_icon_url": "https://i.redd.it/award_images/t5_22cerq/klvxk1wggfd41_Helpful.png"}], "awarders": [], "media_only": false, "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#73ad34", "id": "mkhpu1", "is_robot_indexable": true, "report_reasons": null, "author": "WanTruSauce", "discussion_type": null, "num_comments": 34, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mkhpu1/songpool_a_place_to_rate_how_good_and_bad_others/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mkhpu1/songpool_a_place_to_rate_how_good_and_bad_others/", "subreddit_subscribers": 783705, "created_utc": 1617619365.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I wrote a blog about a few python features which surprised me when I learned about them recently. Check it out here :\n\n[https://towardsdatascience.com/hidden-gems-of-python-76020b14e42f](https://towardsdatascience.com/hidden-gems-of-python-76020b14e42f)", "author_fullname": "t2_k9zvo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Hidden Gems of python", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_mlfa7o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617754480.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a blog about a few python features which surprised me when I learned about them recently. Check it out here :&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://towardsdatascience.com/hidden-gems-of-python-76020b14e42f\"&gt;https://towardsdatascience.com/hidden-gems-of-python-76020b14e42f&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?auto=webp&amp;s=aadb0e42f4c2ce13a2477616d6f5d494680de122", "width": 1200, "height": 800}, "resolutions": [{"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fc656902405a6d2ca3ffcb3b5bb55a39d0962c23", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=708c0e15be9c9bbf5812cde915a162b4baab56d8", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3d6e4430d8bfb960ce5821fd43182fe80e578a03", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e57ace89f0521896ef949c3f68acb97cd2efbdd2", "width": 640, "height": 426}, {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f95e1ca999af5e6472897e553fc93bf865658030", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/ndlwCKbbfP3-FI7wkb0OKC1QLMSL_7BmR1MXnUiTlIQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7c396845a77342f85637d82656d330771ee06fe1", "width": 1080, "height": 720}], "variants": {}, "id": "Yn8Trnu6eSxKmc5soXEelJUck5OSHF9OJy0ITa3Bn1I"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "mlfa7o", "is_robot_indexable": true, "report_reasons": null, "author": "CharryPotter", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlfa7o/hidden_gems_of_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mlfa7o/hidden_gems_of_python/", "subreddit_subscribers": 783705, "created_utc": 1617725680.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_1e1sne", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How Python dictionaries work", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 94, "top_awarded_type": null, "hide_score": true, "name": "t3_mlep4x", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/vWGMFo-db1cpLVSzU4P3Fgbch5jADFZ6NtCFaG1b_qU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617752959.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tenthousandmeters.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://tenthousandmeters.com/blog/python-behind-the-scenes-10-how-python-dictionaries-work/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?auto=webp&amp;s=a0f4ffda533e694ac4eadebf02a43016a4d6d713", "width": 1640, "height": 1103}, "resolutions": [{"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4cce1d355cef003289618511ba69910ddee56306", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=adf5b56fe2bf848c5a315e905b6366a2403c52d8", "width": 216, "height": 145}, {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f1db3099ad5c3e80c27559d87be034d324932039", "width": 320, "height": 215}, {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fb28a482f3baf8295a476aa1069012d018be4159", "width": 640, "height": 430}, {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=94561ffa8b003d7cf43984b9c8c8140ba3a4786a", "width": 960, "height": 645}, {"url": "https://external-preview.redd.it/e6YMWMHnzIaXkSretOnZ5-WDfQzv3NaAcgEmN4nhBYE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=16f534c78e023bd75d18f3039c5c98d8b79b8e93", "width": 1080, "height": 726}], "variants": {}, "id": "pI5zn9Wl5C8cZsdYXy3ErrnfJBQSXpBolG_qTU6zGig"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlep4x", "is_robot_indexable": true, "report_reasons": null, "author": "r4victor", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlep4x/how_python_dictionaries_work/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tenthousandmeters.com/blog/python-behind-the-scenes-10-how-python-dictionaries-work/", "subreddit_subscribers": 783705, "created_utc": 1617724159.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Before anything, I know a bot like this exists and it is bigger and better than mine; I did this just for fun and learning, I don't expect it to get big or anything.\n\nThe bot has multiple games such as Poker, Blackjack, Slot Machine, and some others. It is fully developed in Python and open source. If the code help you to solve a problem or develop your code you can go ahead and copy it, I'm glad to help.\n\nAs I said in the beginning, I don't expect it to get big or anything like that but if you want to help me or contribute something you can contact me through Discord (Maypher#3171). Here's the [repository](https://github.com/Maypher/Casino_Bot) for anyone interested.", "author_fullname": "t2_4ywbpsy8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I made a Discord bot that simulates Casino games", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_mldx1x", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617750828.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Before anything, I know a bot like this exists and it is bigger and better than mine; I did this just for fun and learning, I don&amp;#39;t expect it to get big or anything.&lt;/p&gt;\n\n&lt;p&gt;The bot has multiple games such as Poker, Blackjack, Slot Machine, and some others. It is fully developed in Python and open source. If the code help you to solve a problem or develop your code you can go ahead and copy it, I&amp;#39;m glad to help.&lt;/p&gt;\n\n&lt;p&gt;As I said in the beginning, I don&amp;#39;t expect it to get big or anything like that but if you want to help me or contribute something you can contact me through Discord (Maypher#3171). Here&amp;#39;s the &lt;a href=\"https://github.com/Maypher/Casino_Bot\"&gt;repository&lt;/a&gt; for anyone interested.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/jm-kIuHWM4bv0zox2z5NhvC6jFQJMfFZfF0JHzxFroM.jpg?auto=webp&amp;s=b81e72a4d05c45ea419cf2a46e80429db2b54b06", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/jm-kIuHWM4bv0zox2z5NhvC6jFQJMfFZfF0JHzxFroM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a768249b8f316f0ce47d81605dfe8dfd362a8104", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/jm-kIuHWM4bv0zox2z5NhvC6jFQJMfFZfF0JHzxFroM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=968e9cef7e00f3eb527ec3f29d21b9d4ce3009db", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/jm-kIuHWM4bv0zox2z5NhvC6jFQJMfFZfF0JHzxFroM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c251dfb6066566c93ec812ac9bbb502e44d4848b", "width": 320, "height": 320}], "variants": {}, "id": "hEPoUKFvKaeTvDZy2z3dLJAzl6y35q9SgSaPHVkmqyQ"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "mldx1x", "is_robot_indexable": true, "report_reasons": null, "author": "Maypher", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mldx1x/i_made_a_discord_bot_that_simulates_casino_games/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mldx1x/i_made_a_discord_bot_that_simulates_casino_games/", "subreddit_subscribers": 783705, "created_utc": 1617722028.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_klvut", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Real-world Usages of *Pool.imap* in Python", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_mldllu", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1617750003.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "dyx.name", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.dyx.name/posts/essays/imap.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "mldllu", "is_robot_indexable": true, "report_reasons": null, "author": "dongyx", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mldllu/realworld_usages_of_poolimap_in_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.dyx.name/posts/essays/imap.html", "subreddit_subscribers": 783705, "created_utc": 1617721203.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_8lr58joo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Learn Python | Python for Beginners in 17 lessons and projects | Prepared Jupyter Notebooks | FREE eBook available (see comments below) | Part 1 of 17", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": 105, "top_awarded_type": null, "hide_score": false, "name": "t3_mlcon2", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.5, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/ybeeuGXdhrQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "height": 200}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Learn Python | 8h Full Course | Part 1 of 17", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/ybeeuGXdhrQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Learn Python with Rune", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/ybeeuGXdhrQ/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/LearnPythonwithRune"}}, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {"content": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/ybeeuGXdhrQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 356, "scrolling": false, "media_domain_url": "https://www.redditmedia.com/mediaembed/mlcon2", "height": 200}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 0, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/2dWwT5ZROWEYskPADvaCRasgKa8ipAOhO87WeAOKguo.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "rich:video", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617747457.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "youtu.be", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://youtu.be/ybeeuGXdhrQ", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/lhq-n4sbLvoiep4eEQ2YeBUiyn6g8JcOFuT_GQ0qQBQ.jpg?auto=webp&amp;s=5c335a36eefbcb305a8862953ce011324c953168", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/lhq-n4sbLvoiep4eEQ2YeBUiyn6g8JcOFuT_GQ0qQBQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fb60f36e2812a57cc458ec25630c2e66d9c376b6", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/lhq-n4sbLvoiep4eEQ2YeBUiyn6g8JcOFuT_GQ0qQBQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=766c25ed186da40f61ca476059b51d09c8f6b642", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/lhq-n4sbLvoiep4eEQ2YeBUiyn6g8JcOFuT_GQ0qQBQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e6de33ae31cce53f9d9d92d0db4e20ce3a3ed543", "width": 320, "height": 240}], "variants": {}, "id": "axtgzDDcIX_6jQhkr7OtoxzI-c7Uoyw-egH0Aq3ppcY"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "mlcon2", "is_robot_indexable": true, "report_reasons": null, "author": "LearnPythonWithRune", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlcon2/learn_python_python_for_beginners_in_17_lessons/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://youtu.be/ybeeuGXdhrQ", "subreddit_subscribers": 783705, "created_utc": 1617718657.0, "num_crossposts": 0, "media": {"type": "youtube.com", "oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Learn Python | 8h Full Course | Part 1 of 17", "type": "video", "thumbnail_width": 480, "height": 200, "width": 356, "html": "&lt;iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/ybeeuGXdhrQ?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Learn Python with Rune", "provider_name": "YouTube", "thumbnail_url": "https://i.ytimg.com/vi/ybeeuGXdhrQ/hqdefault.jpg", "thumbnail_height": 360, "author_url": "https://www.youtube.com/c/LearnPythonwithRune"}}, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_9p8xucd7", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Good python mini projects with source code", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": 35, "top_awarded_type": null, "hide_score": false, "name": "t3_ml6ov4", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/nygtDkGupNHHxQsmLEhrgCrgnUlBC7puzZT1Ydtd-FI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617725209.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "webdigitalweb.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://webdigitalweb.com/mini-projects-for-cse-in-python/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?auto=webp&amp;s=341c96f1814076d5462f1c6c525464bb2cb6a428", "width": 1584, "height": 396}, "resolutions": [{"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7a0758279d1c95f86f8cdd3eab950266ff591223", "width": 108, "height": 27}, {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=961cb274ba52dbea118d6ad9c874ef63ed4feaac", "width": 216, "height": 54}, {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1ee75e75970d9b6aa1f050ee23442a8a930762d5", "width": 320, "height": 80}, {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3740b9e14d7d36c3a672f4fdf0d725c37b8634e0", "width": 640, "height": 160}, {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d034dc58a71ba58e67568929a487894affdc72c2", "width": 960, "height": 240}, {"url": "https://external-preview.redd.it/TAlhZOUH-MV9YSZwUlLjVRNiGe4AxGNbo0NacGbSDqE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f4fcfafbe78d78e7afc2616543bf5c7c5bce22e7", "width": 1080, "height": 270}], "variants": {}, "id": "iYtQEQR3oYZG3nyngPSbuEiXeVje18d2kF_B0dnQTqA"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ml6ov4", "is_robot_indexable": true, "report_reasons": null, "author": "Specialist_Tour_5212", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/ml6ov4/good_python_mini_projects_with_source_code/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://webdigitalweb.com/mini-projects-for-cse-in-python/", "subreddit_subscribers": 783705, "created_utc": 1617696409.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_7ogw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "vladkol/azure-debug-relay Azure Debug Relay for Python", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": 140, "top_awarded_type": null, "hide_score": false, "name": "t3_mlc38a", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/s4j6fDFy_iVG55HrY5kDCQS585Z4E0yYVog9fkGZWcs.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1617745796.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://github.com/vladkol/azure-debug-relay", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/Wzk_yp_6Cb9M4K1opwu0TF92RslrsRe0wqrJZs_jqXI.jpg?auto=webp&amp;s=5cebaeb30dec2e118e01d9ffcfe05ec11e189735", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/Wzk_yp_6Cb9M4K1opwu0TF92RslrsRe0wqrJZs_jqXI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6d130e818e6186cc70b0ccaab0b1115f69289c91", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/Wzk_yp_6Cb9M4K1opwu0TF92RslrsRe0wqrJZs_jqXI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dc8221291df28d566a4699c746bf73fcff7404fe", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/Wzk_yp_6Cb9M4K1opwu0TF92RslrsRe0wqrJZs_jqXI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f930b386822de8f56a9dfa84cf42ebbbd4e4ba78", "width": 320, "height": 320}], "variants": {}, "id": "gW1_lRDMpi9JgXqsdjNoyqKeH9o5JJ80CPbyLIWTYYs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mlc38a", "is_robot_indexable": true, "report_reasons": null, "author": "pmz", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mlc38a/vladkolazuredebugrelay_azure_debug_relay_for/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/vladkol/azure-debug-relay", "subreddit_subscribers": 783705, "created_utc": 1617716996.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I'm mostly bored with the hyper corporate world surrounding Java. The product I'm working on is boring, I don't understand the user stories I'm supposed to implement (insurance related). Java Enterprise projects are huuuge chonkers.\n\nI want to work on projects I'm actually interested in and I fear that most Java jobs are on products that don't interest me. Also, Java EE is a behemoth. I bought multiple books and it's still a little overwhelming, even though I knew core Java for years.\n\nMy concerns:\n\n* In Germany, Java is the language most in demand\n* I would learn Python while also learning Java for work. This is less of a problem, since I really want to do Python projects in my free time, but I also would like to learn stuff for my current job.\n* Most of the code from this current job I only understood because of static typing. I saw that this type was given to this service and roughly understood what was going on. My concern is that on larger projects, I wouldn't be able to read Python code as fast.\n\nMy hopes:\n\n* Easier projects and more fun projects and frameworks\n* Working on products that aren't hyper-corporate, that I can actually understand and that interest me\n\nPython (backend) developers, what products are you working on? How big is your project, how many developers are you working with? Are the frameworks and technologies you use fun to you? How corporate is your job?", "author_fullname": "t2_n7uki", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm a Junior Java EE Developer thinking about finding a new Job at Python Backend. Anyone here with a similar background? How corporate is the Python world? How complex are Python projects?", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ml7v05", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 3, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1617730670.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m mostly bored with the hyper corporate world surrounding Java. The product I&amp;#39;m working on is boring, I don&amp;#39;t understand the user stories I&amp;#39;m supposed to implement (insurance related). Java Enterprise projects are huuuge chonkers.&lt;/p&gt;\n\n&lt;p&gt;I want to work on projects I&amp;#39;m actually interested in and I fear that most Java jobs are on products that don&amp;#39;t interest me. Also, Java EE is a behemoth. I bought multiple books and it&amp;#39;s still a little overwhelming, even though I knew core Java for years.&lt;/p&gt;\n\n&lt;p&gt;My concerns:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;In Germany, Java is the language most in demand&lt;/li&gt;\n&lt;li&gt;I would learn Python while also learning Java for work. This is less of a problem, since I really want to do Python projects in my free time, but I also would like to learn stuff for my current job.&lt;/li&gt;\n&lt;li&gt;Most of the code from this current job I only understood because of static typing. I saw that this type was given to this service and roughly understood what was going on. My concern is that on larger projects, I wouldn&amp;#39;t be able to read Python code as fast.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;My hopes:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Easier projects and more fun projects and frameworks&lt;/li&gt;\n&lt;li&gt;Working on products that aren&amp;#39;t hyper-corporate, that I can actually understand and that interest me&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Python (backend) developers, what products are you working on? How big is your project, how many developers are you working with? Are the frameworks and technologies you use fun to you? How corporate is your job?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ml7v05", "is_robot_indexable": true, "report_reasons": null, "author": "GosuPleb", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/ml7v05/im_a_junior_java_ee_developer_thinking_about/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/ml7v05/im_a_junior_java_ee_developer_thinking_about/", "subreddit_subscribers": 783705, "created_utc": 1617701870.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "", "author_fullname": "t2_7wp0x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Django 3.2 released", "link_flair_richtext": [{"e": "text", "t": "News"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "news", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_ml7u4l", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "News", "can_mod_post": false, "score": 2, "approved_by": null, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1617730564.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "djangoproject.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://www.djangoproject.com/weblog/2021/apr/06/django-32-released/", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "ml7u4l", "is_robot_indexable": true, "report_reasons": null, "author": "myroon5", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/ml7u4l/django_32_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.djangoproject.com/weblog/2021/apr/06/django-32-released/", "subreddit_subscribers": 783705, "created_utc": 1617701764.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "People talk about contributing to open source. And I would like to. But I am not sure how to find good open source projects which need help. And if I did find one, I am not sure how to start. \n\nDoes anyone know a good open source python repo? If you had to contribute to it for the first time, what are a few things you would do step by step? I assume you need to fork the repository, make a branch, do something, and then see if the owner likes your changes? \n\nIs there a website which people use to find a list of open source projects? \n\nThanks guys.", "author_fullname": "t2_h81s8", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Where to actually find open source projects and how to approach them", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mkhx6o", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.95, "author_flair_background_color": null, "subreddit_type": "public", "ups": 129, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 129, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1617648992.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;People talk about contributing to open source. And I would like to. But I am not sure how to find good open source projects which need help. And if I did find one, I am not sure how to start. &lt;/p&gt;\n\n&lt;p&gt;Does anyone know a good open source python repo? If you had to contribute to it for the first time, what are a few things you would do step by step? I assume you need to fork the repository, make a branch, do something, and then see if the owner likes your changes? &lt;/p&gt;\n\n&lt;p&gt;Is there a website which people use to find a list of open source projects? &lt;/p&gt;\n\n&lt;p&gt;Thanks guys.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mkhx6o", "is_robot_indexable": true, "report_reasons": null, "author": "trngoon", "discussion_type": null, "num_comments": 19, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mkhx6o/where_to_actually_find_open_source_projects_and/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mkhx6o/where_to_actually_find_open_source_projects_and/", "subreddit_subscribers": 783705, "created_utc": 1617620192.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hey everyone!\n\nI\u2019ve spent the past few months building courses that teach Python through real-life projects like [analyzing NBA data](https://www.likeiamfive.com/courses/data-analysis) or [web scraping listings from Airbnb](https://www.likeiamfive.com/courses/web-scraping). I designed my courses so a complete beginner would understand them with 0 prior coding experience and each one takes less than 4 hours.\n\nI\u2019ve been teaching coding for a while (previously at General Assembly before starting my own site) and am really passionate about helping people learn to code. I thought it would be fun to design a course around a topic people love - basketball - to teach the basics of Python in less than 1 hour. You can see a sneak peak of the course [here](https://www.loom.com/share/a378773c464a40a986076da4a27e6c75).\n\nYou can sign up to take the course with me live on April 13th @ 6pm EST [here](https://www.likeiamfive.com/live-course). I've also pre-recorded the course if you want to take it on your own time - the course is free regardless of how you take it :)\n\n**Also, I\u2019ll be giving away lifetime access to the courses I\u2019ve come out with (web scraping listings from Airbnb and analyzing NBA data) to 3 people who join the live course.** I\u2019d love for as many people to join as possible, so I\u2019ll share a personalized referral link with you that helps you increase your odds of winning the giveaway when you sign up.\n\nReally excited to teach you all!", "author_fullname": "t2_12ck7u", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Good free course to learn Python basics through NBA data", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_mkie7a", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.88, "author_flair_background_color": null, "subreddit_type": "public", "ups": 68, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 68, "approved_by": null, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1617650701.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone!&lt;/p&gt;\n\n&lt;p&gt;I\u2019ve spent the past few months building courses that teach Python through real-life projects like &lt;a href=\"https://www.likeiamfive.com/courses/data-analysis\"&gt;analyzing NBA data&lt;/a&gt; or &lt;a href=\"https://www.likeiamfive.com/courses/web-scraping\"&gt;web scraping listings from Airbnb&lt;/a&gt;. I designed my courses so a complete beginner would understand them with 0 prior coding experience and each one takes less than 4 hours.&lt;/p&gt;\n\n&lt;p&gt;I\u2019ve been teaching coding for a while (previously at General Assembly before starting my own site) and am really passionate about helping people learn to code. I thought it would be fun to design a course around a topic people love - basketball - to teach the basics of Python in less than 1 hour. You can see a sneak peak of the course &lt;a href=\"https://www.loom.com/share/a378773c464a40a986076da4a27e6c75\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can sign up to take the course with me live on April 13th @ 6pm EST &lt;a href=\"https://www.likeiamfive.com/live-course\"&gt;here&lt;/a&gt;. I&amp;#39;ve also pre-recorded the course if you want to take it on your own time - the course is free regardless of how you take it :)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Also, I\u2019ll be giving away lifetime access to the courses I\u2019ve come out with (web scraping listings from Airbnb and analyzing NBA data) to 3 people who join the live course.&lt;/strong&gt; I\u2019d love for as many people to join as possible, so I\u2019ll share a personalized referral link with you that helps you increase your odds of winning the giveaway when you sign up.&lt;/p&gt;\n\n&lt;p&gt;Really excited to teach you all!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "mkie7a", "is_robot_indexable": true, "report_reasons": null, "author": "mattyba11", "discussion_type": null, "num_comments": 13, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/mkie7a/good_free_course_to_learn_python_basics_through/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/mkie7a/good_free_course_to_learn_python_basics_through/", "subreddit_subscribers": 783705, "created_utc": 1617621901.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "[Wutch rebuilds your Sphinx docs and refreshes browser on each change.](https://i.redd.it/94zvylk63jr61.gif)\n\nWutch is built for  developers who are tired of clicking the refresh button in the browser or hitting Ctrl+R to refresh the page, when writing the documentation and checking how it's rendered. \n\nIt's works great for Sphinx-based documentation. However, wutch can work with any static generator or even with build pipelines like gulp. \n\nUnlike some other tools, wutch is highly configurable and automatically refreshes the web page on every build. It uses an async web server under the hood and signals the browser to refresh using a websocket.\n\nCheckout an [Article on dev.to](https://dev.to/vduseev/introducing-wutch-4ii0) about it and check the source code: [https://github.com/vduseev/wutch](https://github.com/vduseev/wutch)", "author_fullname": "t2_1vd3cwmh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Introducing Wutch: python-based Live Server", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": 85, "top_awarded_type": null, "hide_score": false, "media_metadata": {"94zvylk63jr61": {"status": "valid", "e": "AnimatedImage", "m": "image/gif", "p": [{"y": 66, "x": 108, "u": "https://preview.redd.it/94zvylk63jr61.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=e32a2d0c0ced7a4a7cce7ba5d4c0af838271fb8d"}, {"y": 132, "x": 216, "u": "https://preview.redd.it/94zvylk63jr61.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=b452c570cdfc1c7e72570df480c9200cdd10ccd5"}, {"y": 195, "x": 320, "u": "https://preview.redd.it/94zvylk63jr61.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=81957aed1042ecb023f66c924cd57a1d1aa69114"}, {"y": 391, "x": 640, "u": "https://preview.redd.it/94zvylk63jr61.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=8af865b0377937751884d80357f2947f70d81d6f"}], "s": {"y": 489, "gif": "https://i.redd.it/94zvylk63jr61.gif", "mp4": "https://preview.redd.it/94zvylk63jr61.gif?format=mp4&amp;s=e283ac5e30a97be7f970d085de133ed3253df5c8", "x": 800}, "id": "94zvylk63jr61"}}, "name": "t3_ml8glf", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 1, "approved_by": null, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/xlznb9OfXQj_sHAZ2UfNrUxD2hYqbG8RJxzzunOssdc.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1617733217.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://i.redd.it/94zvylk63jr61.gif\"&gt;Wutch rebuilds your Sphinx docs and refreshes browser on each change.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wutch is built for  developers who are tired of clicking the refresh button in the browser or hitting Ctrl+R to refresh the page, when writing the documentation and checking how it&amp;#39;s rendered. &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s works great for Sphinx-based documentation. However, wutch can work with any static generator or even with build pipelines like gulp. &lt;/p&gt;\n\n&lt;p&gt;Unlike some other tools, wutch is highly configurable and automatically refreshes the web page on every build. It uses an async web server under the hood and signals the browser to refresh using a websocket.&lt;/p&gt;\n\n&lt;p&gt;Checkout an &lt;a href=\"https://dev.to/vduseev/introducing-wutch-4ii0\"&gt;Article on dev.to&lt;/a&gt; about it and check the source code: &lt;a href=\"https://github.com/vduseev/wutch\"&gt;https://github.com/vduseev/wutch&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?auto=webp&amp;s=095175ebe544da2483c4947b08e070b4cbce1e37", "width": 1000, "height": 500}, "resolutions": [{"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=952dbda11c2a62663a66fb9a2c99b02fc288d75b", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f5043ee2a222330239ec9d5ffc58b19acba815f2", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6342491ae1bf5c4f82c6d5d980a4ac1683c03f2f", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1ef4cfffe4d3208616072b0979681fffb677df9c", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/FxohAOPO7l6Dw2Kf5dVuwupqTuqKo3LEq6T3Aaj2LDg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=80019b17a417b4f825eb8b7e92b7fdc6637dcc7c", "width": 960, "height": 480}], "variants": {}, "id": "QzXPGcKm6u4XuV3UqRzA-iRsvO2TPFnaOPPDSBtCUmg"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": true, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "ml8glf", "is_robot_indexable": true, "report_reasons": null, "author": "vduseev", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/ml8glf/introducing_wutch_pythonbased_live_server/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/ml8glf/introducing_wutch_pythonbased_live_server/", "subreddit_subscribers": 783705, "created_utc": 1617704417.0, "num_crossposts": 0, "media": null, "is_video": false}}], "after": "t3_ml8glf", "before": null}}
